/* =========================================================
   Pharma Logistics – Modèle relationnel (SQL Server)
   Auteur : Marc
   Description : Script complet avec création de la base,
                 toutes contraintes, relations et index.
   ========================================================= */

------------------------------------------------------------
-- 1) Création et sélection de la base de données
------------------------------------------------------------
IF DB_ID('PharmaLogistics') IS NOT NULL
    DROP DATABASE PharmaLogistics;
GO

CREATE DATABASE PharmaLogistics;
GO

USE PharmaLogistics;
GO

SET NOCOUNT ON;

------------------------------------------------------------
-- 2) Nettoyage préalable dans l'ordre inverse des dépendances
------------------------------------------------------------
IF OBJECT_ID('dbo.ForecastWeekly','U') IS NOT NULL DROP TABLE dbo.ForecastWeekly;
IF OBJECT_ID('dbo.Inventory','U')        IS NOT NULL DROP TABLE dbo.Inventory;
IF OBJECT_ID('dbo.Returns','U')          IS NOT NULL DROP TABLE dbo.Returns;
IF OBJECT_ID('dbo.TemperatureExcursions','U') IS NOT NULL DROP TABLE dbo.TemperatureExcursions;
IF OBJECT_ID('dbo.Transportation','U')   IS NOT NULL DROP TABLE dbo.Transportation;
IF OBJECT_ID('dbo.Orders','U')           IS NOT NULL DROP TABLE dbo.Orders;
IF OBJECT_ID('dbo.Products','U')         IS NOT NULL DROP TABLE dbo.Products;
IF OBJECT_ID('dbo.Warehouses','U')       IS NOT NULL DROP TABLE dbo.Warehouses;
IF OBJECT_ID('dbo.Suppliers','U')        IS NOT NULL DROP TABLE dbo.Suppliers;
IF OBJECT_ID('dbo.Customers','U')        IS NOT NULL DROP TABLE dbo.Customers;

------------------------------------------------------------
-- 3) Dimensions / Référentiels
------------------------------------------------------------
CREATE TABLE dbo.Customers
(
    CustomerID       VARCHAR(20)    NOT NULL,
    CustomerName     NVARCHAR(200)  NOT NULL,
    [Type]           NVARCHAR(100)  NULL,
    Country          NVARCHAR(100)  NULL,
    Region           NVARCHAR(100)  NULL,
    Industry         NVARCHAR(100)  NULL,
    CustomerSegment  NVARCHAR(100)  NULL,
    CONSTRAINT PK_Customers PRIMARY KEY (CustomerID)
);

CREATE TABLE dbo.Suppliers
(
    SupplierID           VARCHAR(20)    NOT NULL,
    SupplierName         NVARCHAR(200)  NOT NULL,
    Country              NVARCHAR(100)  NULL,
    LeadTimeDays         INT            NULL,
    ReliabilityRate      DECIMAL(6,4)   NULL,
    AvgDeliveryDelayDays DECIMAL(10,2)  NULL,
    CONSTRAINT PK_Suppliers PRIMARY KEY (SupplierID),
    CONSTRAINT CK_Suppliers_ReliabilityRate CHECK (ReliabilityRate IS NULL OR (ReliabilityRate BETWEEN 0 AND 1))
);

CREATE TABLE dbo.Warehouses
(
    WarehouseID     VARCHAR(20)    NOT NULL,
    WarehouseName   NVARCHAR(200)  NOT NULL,
    Country         NVARCHAR(100)  NULL,
    Region          NVARCHAR(100)  NULL,
    Capacity        INT            NULL,
    UtilizationRate DECIMAL(6,4)   NULL,
    CONSTRAINT PK_Warehouses PRIMARY KEY (WarehouseID),
    CONSTRAINT CK_Warehouses_UtilRate CHECK (UtilizationRate IS NULL OR (UtilizationRate BETWEEN 0 AND 1)),
    CONSTRAINT CK_Warehouses_Capacity CHECK (Capacity IS NULL OR Capacity >= 0)
);

CREATE TABLE dbo.Products
(
    ProductID         VARCHAR(20)    NOT NULL,
    ProductName       NVARCHAR(200)  NOT NULL,
    Category          NVARCHAR(100)  NULL,
    DosageForm        NVARCHAR(100)  NULL,
    Strength          NVARCHAR(100)  NULL,
    TemperatureRange  NVARCHAR(100)  NULL,
    UnitCost          DECIMAL(18,4)  NULL,
    Weight            DECIMAL(18,6)  NULL,
    Volume            DECIMAL(18,6)  NULL,
    SupplierID        VARCHAR(20)    NULL,
    GTIN              BIGINT         NULL,
    CONSTRAINT PK_Products PRIMARY KEY (ProductID),
    CONSTRAINT FK_Products_Suppliers FOREIGN KEY (SupplierID) REFERENCES dbo.Suppliers(SupplierID),
    CONSTRAINT UQ_Products_GTIN UNIQUE (GTIN)
);

------------------------------------------------------------
-- 4) Table de faits principale : Orders
------------------------------------------------------------
CREATE TABLE dbo.Orders
(
    OrderID                 VARCHAR(20)   NOT NULL,
    CustomerID              VARCHAR(20)   NOT NULL,
    ProductID               VARCHAR(20)   NOT NULL,
    OrderDate               DATE          NULL,
    ShipDate                DATE          NULL,
    Quantity                INT           NOT NULL,
    UnitPrice               DECIMAL(18,4) NOT NULL,
    TotalCost               DECIMAL(19,4) NOT NULL,
    WarehouseID             VARCHAR(20)   NULL,
    Region                  NVARCHAR(100) NULL,
    [Status]                NVARCHAR(100) NULL,
    BatchNo                 NVARCHAR(100) NULL,
    ExpiryDate              DATE          NULL,
    TemperatureRange        NVARCHAR(100) NULL,
    ColdChainRequired       NVARCHAR(10)  NULL,
    RequestedDeliveryDate   DATE          NULL,
    DeliveryDate            DATE          NULL,
    DeliveredQuantity       INT           NULL,
    OnTimeFlag              TINYINT       NULL,
    InFullFlag              TINYINT       NULL,
    OTIF_Flag               TINYINT       NULL,
    DeliveryAccuracy        DECIMAL(6,2)  NULL,
    SerialTracked           NVARCHAR(10)  NULL,
    Mode                    NVARCHAR(50)  NULL,
    CONSTRAINT PK_Orders PRIMARY KEY (OrderID),
    CONSTRAINT FK_Orders_Customers  FOREIGN KEY (CustomerID)  REFERENCES dbo.Customers(CustomerID),
    CONSTRAINT FK_Orders_Products   FOREIGN KEY (ProductID)   REFERENCES dbo.Products(ProductID),
    CONSTRAINT FK_Orders_Warehouses FOREIGN KEY (WarehouseID) REFERENCES dbo.Warehouses(WarehouseID),
    CONSTRAINT CK_Orders_Qty CHECK (Quantity >= 0),
    CONSTRAINT CK_Orders_DeliveredQty CHECK (DeliveredQuantity IS NULL OR DeliveredQuantity >= 0),
    CONSTRAINT CK_Orders_Flags CHECK (
        (OnTimeFlag IS NULL OR OnTimeFlag IN (0,1)) AND
        (InFullFlag IS NULL OR InFullFlag IN (0,1)) AND
        (OTIF_Flag  IS NULL OR OTIF_Flag  IN (0,1))
    ),
    CONSTRAINT CK_Orders_Prices CHECK (UnitPrice >= 0 AND TotalCost >= 0),
    CONSTRAINT CK_Orders_DeliveryAccuracy CHECK (DeliveryAccuracy IS NULL OR (DeliveryAccuracy BETWEEN 0 AND 100))
);
CREATE INDEX IX_Orders_Customer   ON dbo.Orders(CustomerID);
CREATE INDEX IX_Orders_Product    ON dbo.Orders(ProductID);
CREATE INDEX IX_Orders_Warehouse  ON dbo.Orders(WarehouseID);
CREATE INDEX IX_Orders_OrderDate  ON dbo.Orders(OrderDate);

------------------------------------------------------------
-- 5) Logistique : Transport & Température
------------------------------------------------------------
CREATE TABLE dbo.Transportation
(
    TransportID            VARCHAR(30)    NOT NULL,
    OrderID                VARCHAR(20)    NOT NULL,
    Carrier                NVARCHAR(150)  NULL,
    Mode                   NVARCHAR(50)   NULL,
    DistanceKm             INT            NULL,
    TransportCost          DECIMAL(19,4)  NULL,
    CO2EmissionKg          DECIMAL(19,6)  NULL,
    TemperatureControl     NVARCHAR(50)   NULL,
    DataLoggerUsed         NVARCHAR(50)   NULL,
    DamageFlag             TINYINT        NULL,
    LostFlag               TINYINT        NULL,
    DeliveryAccuracyScore  DECIMAL(6,2)   NULL,
    CONSTRAINT PK_Transportation PRIMARY KEY (TransportID),
    CONSTRAINT FK_Transportation_Orders FOREIGN KEY (OrderID) REFERENCES dbo.Orders(OrderID),
    CONSTRAINT CK_Transportation_NonNeg CHECK (
        (DistanceKm IS NULL OR DistanceKm >= 0) AND
        (TransportCost IS NULL OR TransportCost >= 0) AND
        (CO2EmissionKg IS NULL OR CO2EmissionKg >= 0)
    ),
    CONSTRAINT CK_Transportation_Flags CHECK (
        (DamageFlag IS NULL OR DamageFlag IN (0,1)) AND
        (LostFlag   IS NULL OR LostFlag   IN (0,1))
    ),
    CONSTRAINT CK_Transportation_Acc CHECK (DeliveryAccuracyScore IS NULL OR (DeliveryAccuracyScore BETWEEN 0 AND 100))
);
CREATE INDEX IX_Transportation_Order ON dbo.Transportation(OrderID);

CREATE TABLE dbo.TemperatureExcursions
(
    OrderID            VARCHAR(20)  NOT NULL,
    MinTempC           DECIMAL(9,3) NULL,
    MaxTempC           DECIMAL(9,3) NULL,
    MinutesOutOfRange  INT          NULL,
    ExcursionFlag      TINYINT      NULL,
    CONSTRAINT PK_TemperatureExcursions PRIMARY KEY (OrderID),
    CONSTRAINT FK_TempExcursions_Orders FOREIGN KEY (OrderID) REFERENCES dbo.Orders(OrderID),
    CONSTRAINT CK_TempExcursions_Flag CHECK (ExcursionFlag IS NULL OR ExcursionFlag IN (0,1)),
    CONSTRAINT CK_TempExcursions_Mins CHECK (MinutesOutOfRange IS NULL OR MinutesOutOfRange >= 0)
);

------------------------------------------------------------
-- 6) Retours
------------------------------------------------------------
CREATE TABLE dbo.Returns
(
    OrderID           VARCHAR(20) NOT NULL,
    ReturnDate        DATE        NOT NULL,
    ReturnedQuantity  INT         NOT NULL,
    Reason            NVARCHAR(200) NULL,
    CONSTRAINT PK_Returns PRIMARY KEY (OrderID, ReturnDate),
    CONSTRAINT FK_Returns_Orders FOREIGN KEY (OrderID) REFERENCES dbo.Orders(OrderID),
    CONSTRAINT CK_Returns_Qty CHECK (ReturnedQuantity >= 0)
);
CREATE INDEX IX_Returns_Order ON dbo.Returns(OrderID);

------------------------------------------------------------
-- 7) Stocks & Prévisions
------------------------------------------------------------
CREATE TABLE dbo.Inventory
(
    ProductID         VARCHAR(20)   NOT NULL,
    WarehouseID       VARCHAR(20)   NOT NULL,
    StockDate         DATE          NOT NULL,
    LotNumber         NVARCHAR(100) NOT NULL,
    ExpiryDate        DATE          NULL,
    TemperatureRange  NVARCHAR(100) NULL,
    StockLevel        INT           NOT NULL,
    ReorderPoint      INT           NULL,
    SafetyStock       INT           NULL,
    StockValue        DECIMAL(19,4) NULL,
    CONSTRAINT PK_Inventory PRIMARY KEY (ProductID, WarehouseID, StockDate, LotNumber),
    CONSTRAINT FK_Inventory_Product   FOREIGN KEY (ProductID)   REFERENCES dbo.Products(ProductID),
    CONSTRAINT FK_Inventory_Warehouse FOREIGN KEY (WarehouseID) REFERENCES dbo.Warehouses(WarehouseID),
    CONSTRAINT CK_Inventory_NonNeg CHECK (
        StockLevel >= 0 AND
        (ReorderPoint IS NULL OR ReorderPoint >= 0) AND
        (SafetyStock  IS NULL OR SafetyStock  >= 0) AND
        (StockValue   IS NULL OR StockValue   >= 0)
    )
);
CREATE INDEX IX_Inventory_WarehouseDate ON dbo.Inventory(WarehouseID, StockDate);
CREATE INDEX IX_Inventory_ProductDate   ON dbo.Inventory(ProductID, StockDate);

CREATE TABLE dbo.ForecastWeekly
(
    ProductID     VARCHAR(20)   NOT NULL,
    WarehouseID   VARCHAR(20)   NOT NULL,
    WeekStart     DATE          NOT NULL,
    ForecastQty   INT           NOT NULL,
    ActualQty     INT           NULL,
    ForecastError INT           NULL,
    ForecastAPE   DECIMAL(9,6)  NULL,
    CONSTRAINT PK_ForecastWeekly PRIMARY KEY (ProductID, WarehouseID, WeekStart),
    CONSTRAINT FK_ForecastWeekly_Product   FOREIGN KEY (ProductID)   REFERENCES dbo.Products(ProductID),
    CONSTRAINT FK_ForecastWeekly_Warehouse FOREIGN KEY (WarehouseID) REFERENCES dbo.Warehouses(WarehouseID),
    CONSTRAINT CK_ForecastWeekly_NonNeg CHECK (
        ForecastQty >= 0 AND
        (ActualQty     IS NULL OR ActualQty     >= 0) AND
        (ForecastError IS NULL OR ForecastError >= 0)
    ),
    CONSTRAINT CK_ForecastWeekly_APE CHECK (ForecastAPE IS NULL OR (ForecastAPE BETWEEN 0 AND 1))
);
CREATE INDEX IX_ForecastWeekly_WhWeek ON dbo.ForecastWeekly(WarehouseID, WeekStart);

------------------------------------------------------------
-- 8) Confirmation
------------------------------------------------------------
PRINT '✅ Base PharmaLogistics créée avec succès, toutes les tables sont opérationnelles.';
GO
